{
  "version": 3,
  "sources": ["<stdin>", "../node_modules/@remix-run/dev/compiler/shims/react.ts", "../src/entry.server.tsx", "route-module:/Users/joshmcfarlin/Code/Web/remix-chess/src/root.tsx", "route-module:/Users/joshmcfarlin/Code/Web/remix-chess/src/routes/piece/$coordinate.ts", "../src/utils/chess.ts", "route-module:/Users/joshmcfarlin/Code/Web/remix-chess/src/routes/move/$coordinate.ts", "route-module:/Users/joshmcfarlin/Code/Web/remix-chess/src/routes/index.tsx"],
  "sourcesContent": ["\nimport * as entryServer from \"/Users/joshmcfarlin/Code/Web/remix-chess/src/entry.server.tsx\";\nimport * as route0 from \"/Users/joshmcfarlin/Code/Web/remix-chess/src/root.tsx\";\nimport * as route1 from \"/Users/joshmcfarlin/Code/Web/remix-chess/src/routes/piece/$coordinate.ts\";\nimport * as route2 from \"/Users/joshmcfarlin/Code/Web/remix-chess/src/routes/move/$coordinate.ts\";\nimport * as route3 from \"/Users/joshmcfarlin/Code/Web/remix-chess/src/routes/index.tsx\";\nexport { default as assets } from \"./assets.json\";\nexport const entry = { module: entryServer };\nexport const routes = {\n  \"root\": {\n    id: \"root\",\n    parentId: undefined,\n    path: \"\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route0\n  },\n  \"routes/piece/$coordinate\": {\n    id: \"routes/piece/$coordinate\",\n    parentId: \"root\",\n    path: \"piece/:coordinate\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route1\n  },\n  \"routes/move/$coordinate\": {\n    id: \"routes/move/$coordinate\",\n    parentId: \"root\",\n    path: \"move/:coordinate\",\n    index: undefined,\n    caseSensitive: undefined,\n    module: route2\n  },\n  \"routes/index\": {\n    id: \"routes/index\",\n    parentId: \"root\",\n    path: undefined,\n    index: true,\n    caseSensitive: undefined,\n    module: route3\n  }\n};", "import * as React from \"react\";\nexport { React };\n", "import { renderToString } from \"react-dom/server\";\nimport { RemixServer } from \"remix\";\nimport type { EntryContext } from \"remix\";\n\nexport default function handleRequest(\n  request: Request,\n  responseStatusCode: number,\n  responseHeaders: Headers,\n  remixContext: EntryContext\n) {\n  const markup = renderToString(\n    <RemixServer context={remixContext} url={request.url} />\n  );\n\n  responseHeaders.set(\"Content-Type\", \"text/html\");\n\n  return new Response(\"<!DOCTYPE html>\" + markup, {\n    status: responseStatusCode,\n    headers: responseHeaders,\n  });\n}\n", "import {\n  Links,\n  LiveReload,\n  Meta,\n  Outlet,\n  Scripts,\n  ScrollRestoration,\n  useCatch,\n} from \"remix\";\nimport type { LinksFunction } from \"remix\";\nimport globalStylesUrl from \"~/styles/global.css\";\nimport darkStylesUrl from \"~/styles/dark.css\";\n\nexport const links: LinksFunction = () => {\n  return [\n    { rel: \"stylesheet\", href: globalStylesUrl },\n    {\n      rel: \"stylesheet\",\n      href: darkStylesUrl,\n      media: \"(prefers-color-scheme: dark)\",\n    },\n  ];\n};\n\nfunction Document({\n  children,\n  title,\n}: {\n  children: React.ReactNode;\n  title?: string;\n}) {\n  return (\n    <html lang=\"en\">\n      <head>\n        <meta charSet=\"utf-8\" />\n        <meta name=\"viewport\" content=\"width=device-width,initial-scale=1\" />\n        {title ? <title>{title}</title> : null}\n        <Meta />\n        <Links />\n      </head>\n      <body>\n        {children}\n        <ScrollRestoration />\n        <Scripts />\n        {process.env.NODE_ENV === \"development\" && <LiveReload />}\n      </body>\n    </html>\n  );\n}\n\nexport default function App() {\n  return (\n    <Document>\n      <Outlet />\n    </Document>\n  );\n}\n\nexport function ErrorBoundary({ error }: { error: Error }) {\n  console.error(error);\n  return (\n    <Document title=\"Error!\">\n      <div>\n        <h1>There was an error</h1>\n        <p>{error.message}</p>\n      </div>\n    </Document>\n  );\n}\n\nexport function CatchBoundary() {\n  const caught = useCatch();\n\n  let message;\n  switch (caught.status) {\n    case 401:\n      message = (\n        <p>\n          Oops! Looks like you tried to visit a page that you do not have access\n          to.\n        </p>\n      );\n      break;\n    case 404:\n      message = (\n        <p>Oops! Looks like you tried to visit a page that does not exist.</p>\n      );\n      break;\n\n    default:\n      throw new Error(caught.data || caught.statusText);\n  }\n\n  return (\n    <Document title={`${caught.status} ${caught.statusText}`}>\n      <div>\n        <h1>\n          {caught.status}: {caught.statusText}\n        </h1>\n        {message}\n      </div>\n    </Document>\n  );\n}\n", "/**\n * The API route to serve the image asset\n */\nimport type { LoaderFunction } from \"remix\";\nimport { getGamePiece } from \"~/utils/chess\";\n\nexport const loader: LoaderFunction = async ({\n  params,\n  request,\n}): Promise<Response> => {\n  // GitHub disables this functionality, so serve GENERAL game on GitHub\n  const gameId =\n    request.headers.get(\"referer\") === \"https://remix-chess.fly.dev/\"\n      ? request.headers.get(\"Fly-Client-IP\") || \"GENERAL\"\n      : \"GENERAL\";\n  const { coordinate } = params;\n\n  const upperCoord = (coordinate || \"\").toUpperCase();\n\n  const piece = await getGamePiece(gameId, upperCoord);\n\n  const img = Buffer.from(\n    piece.replace(/^data:image\\/\\w+;base64,/, \"\"),\n    \"base64\"\n  );\n\n  return new Response(img, {\n    status: 200,\n    headers: {\n      \"Content-Type\": \"image/png\",\n      \"Content-Length\": img.length.toString(),\n      \"Cache-Control\": \"private, no-cache, no-store, must-revalidate\",\n      Expires: \"-1\",\n      Pragma: \"no-cache\",\n    },\n  });\n};\n", "/* eslint-disable @typescript-eslint/no-var-requires */\nimport type { GameConfig } from \"js-chess-engine\";\nimport jsChessEngine from \"js-chess-engine\";\nimport type { Cache } from \"flat-cache\";\nimport flatCache from \"flat-cache\";\nimport mergeImages from \"merge-images\";\nimport { Canvas, Image } from \"canvas\";\nimport path from \"path\";\n\nconst piecesToImages = {\n  P: require(\"../assets/chess/w_pawn.png\"),\n  N: require(\"../assets/chess/w_knight.png\"),\n  B: require(\"../assets/chess/w_bishop.png\"),\n  R: require(\"../assets/chess/w_rook.png\"),\n  Q: require(\"../assets/chess/w_queen.png\"),\n  K: require(\"../assets/chess/w_king.png\"),\n  p: require(\"../assets/chess/b_pawn.png\"),\n  n: require(\"../assets/chess/b_knight.png\"),\n  b: require(\"../assets/chess/b_bishop.png\"),\n  r: require(\"../assets/chess/b_rook.png\"),\n  q: require(\"../assets/chess/b_queen.png\"),\n  k: require(\"../assets/chess/b_king.png\"),\n};\nconst lightSquare = require(\"../assets/chess/square_brown_light.png\");\nconst darkSquare = require(\"../assets/chess/square_brown_dark.png\");\nconst pendingMove = require(\"../assets/chess/blue_glow.png\");\nconst possiblePos = require(\"../assets/chess/green_glow.png\");\nconst errorIcon = require(\"../assets/chess/exclamation_mark.png\");\n\nconst aiLevel = 1;\nconst gameKey = \"GAME\";\nconst selKey = \"SELECTED\";\n\nclass Game {\n  readonly gameId: string;\n  readonly #cache: Cache;\n  readonly #game: jsChessEngine.Game;\n  selectedPiece: string | null;\n\n  constructor(gameId: string) {\n    this.gameId = gameId;\n    this.#cache = flatCache.load(gameId, path.resolve(\"/data\"));\n\n    try {\n      const storedGame = this.#cache.getKey(gameKey);\n      if (storedGame != null) {\n        this.#game = new jsChessEngine.Game(storedGame);\n        this.selectedPiece = this.#cache.getKey(selKey) || null;\n\n        if (this.#game.exportJson().isFinished) {\n          this.#game = new jsChessEngine.Game();\n          this.selectedPiece = null;\n        }\n      } else {\n        this.#game = new jsChessEngine.Game();\n        this.selectedPiece = null;\n      }\n    } catch (error) {\n      this.#game = new jsChessEngine.Game();\n      this.selectedPiece = null;\n    }\n  }\n\n  select(coordinate: string): GameConfig {\n    this.selectedPiece = coordinate !== this.selectedPiece ? coordinate : null;\n\n    const json = this.#game.exportJson();\n    this.#cache.setKey(gameKey, json);\n    this.#cache.setKey(selKey, this.selectedPiece);\n    this.#cache.save(true);\n\n    return json;\n  }\n\n  move(to: string): void {\n    if (this.selectedPiece == null) {\n      throw new Error(\"Please select a game piece first!\");\n    }\n\n    try {\n      this.#game.move(this.selectedPiece, to);\n\n      this.#game.aiMove(aiLevel);\n    } catch (error) {\n      console.error(error);\n    } finally {\n      const json = this.#game.exportJson();\n      this.#cache.setKey(gameKey, json);\n      this.selectedPiece = null;\n      this.#cache.setKey(selKey, null);\n      this.#cache.save(true);\n    }\n  }\n\n  state(): GameConfig {\n    return this.#game.exportJson();\n  }\n}\n\nconst loadedGames = new Map<string, Game>();\n\nconst createGame = (gameId: string): Game => {\n  const game = new Game(gameId);\n\n  loadedGames.set(gameId, game);\n\n  return game;\n};\n\nexport const loadGame = (gameId: string): Game => {\n  if (loadedGames.has(gameId)) {\n    const game = loadedGames.get(gameId);\n\n    if (game == null) {\n      return createGame(gameId);\n    } else if (game.state().isFinished) {\n      return createGame(gameId);\n    }\n\n    return game;\n  } else {\n    return createGame(gameId);\n  }\n};\n\nconst isSquareLight = (coordinate: string): boolean => {\n  const ascii = coordinate.charCodeAt(0);\n  const num = parseInt(coordinate.charAt(1));\n\n  return (ascii + num) % 2 !== 0;\n};\n\nexport const getGamePiece = async (\n  gameId: string,\n  coordinate: string\n): Promise<string> => {\n  try {\n    if (!gameId || !coordinate) {\n      throw new Error(\"Invalid parameters!\");\n    }\n\n    const game = loadGame(gameId);\n\n    const images: string[] = [\n      isSquareLight(coordinate) ? lightSquare : darkSquare,\n    ];\n\n    const { pieces } = game.state();\n    if (Object.prototype.hasOwnProperty.call(pieces, coordinate)) {\n      images.push(piecesToImages[pieces[coordinate]]);\n    }\n\n    if (game.selectedPiece === coordinate) {\n      images.push(pendingMove);\n    }\n\n    if (\n      game.selectedPiece != null &&\n      Object.prototype.hasOwnProperty.call(\n        game.state().moves,\n        game.selectedPiece\n      ) &&\n      game.state().moves[game.selectedPiece].includes(coordinate)\n    ) {\n      images.push(possiblePos);\n    }\n\n    return mergeImages(\n      images.map((i) => path.resolve(path.join(__dirname, \"..\", i))),\n      {\n        Canvas: Canvas,\n        Image: Image,\n      }\n    );\n  } catch (error) {\n    console.error(error);\n\n    return mergeImages(\n      [path.resolve(path.join(__dirname, \"..\", errorIcon)), \"base64\"],\n      {\n        Canvas: Canvas,\n        Image: Image,\n      }\n    );\n  }\n};\n", "/**\n * The API route to handle a move\n */\nimport type { LoaderFunction } from \"remix\";\nimport { loadGame } from \"~/utils/chess\";\nimport { redirect } from \"remix\";\n\nexport const loader: LoaderFunction = async ({\n  params,\n  request,\n}): Promise<Response> => {\n  // GitHub disables this functionality, so serve GENERAL game on GitHub\n  const gameId =\n    request.headers.get(\"referer\") === \"https://remix-chess.fly.dev/\"\n      ? request.headers.get(\"Fly-Client-IP\") || \"GENERAL\"\n      : \"GENERAL\";\n  const redirectUrl =\n    request.headers.get(\"referer\") === \"https://remix-chess.fly.dev/\"\n      ? \"https://remix-chess.fly.dev/\"\n      : \"https://github.com/Josh-McFarlin\";\n  const { coordinate } = params;\n\n  if (!gameId || !coordinate) {\n    return new Response(\"Please provide all parameters!\", {\n      status: 500,\n    });\n  }\n\n  try {\n    const upperCoord = coordinate.toUpperCase();\n\n    const game = loadGame(gameId);\n\n    if (game.selectedPiece == null || game.selectedPiece === upperCoord) {\n      game.select(upperCoord);\n    } else {\n      game.move(upperCoord);\n    }\n\n    return redirect(redirectUrl);\n  } catch (error) {\n    console.error(error);\n\n    return redirect(redirectUrl);\n  }\n};\n", "import React from \"react\";\nimport type { MetaFunction } from \"remix\";\n\nconst letters = [\"A\", \"B\", \"C\", \"D\", \"E\", \"F\", \"G\", \"H\"];\nconst nums = [8, 7, 6, 5, 4, 3, 2, 1];\n\nexport const meta: MetaFunction = () => {\n  return {\n    title: \"Remix Chess\",\n    description: \"Welcome to Remix Chess!\",\n  };\n};\n\nconst IndexRoute: React.FC = () => {\n  return (\n    <div className=\"remix__page\">\n      <main>\n        {nums.map((number) => (\n          <div key={number}>\n            {letters.map((letter) => (\n              <a key={number + letter} href={`/move/${letter}${number}`}>\n                <img\n                  src={`/piece/${letter}${number}`}\n                  alt={`Chess piece: ${letter}${number}`}\n                />\n              </a>\n            ))}\n          </div>\n        ))}\n      </main>\n    </div>\n  );\n};\n\nexport default IndexRoute;\n"],
  "mappings": "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",
  "names": []
}
